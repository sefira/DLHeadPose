liveplot = false
enableCuda = false
ClassNLL = true

model:forward(test_data[1].data)
model:forward(test_data[2].data)
model:forward(test_data[3].data)
model:forward(test_data[4].data)

dofile "readImage.lua"
i=1
input = train_data[i].data
target = train_data[i].labels
output = model:forward(input)
--err = criterion:forward(output, target)
target
output
--err

require 'cunn'
require 'cutorch'
require 'torch'
require 'nn'

--model = torch.load("results/model.net")
TreeModels = {nn.Sequential(),nn.Sequential(),nn.Sequential(),nn.Sequential()}
function modelGenerater(branchNum)
    TreeModels[branchNum].add(modelNode[1][1])
    TreeModels[branchNum].add(modelNode[2][math.ceil(branchNum/2)])
    TreeModels[branchNum].add(modelNode[3][branchNum])

    if enableCuda then
        TreeModels[branchNum]:cuda()
    end

end

for i = 1,4 do 
    modelGenerater(i)
end