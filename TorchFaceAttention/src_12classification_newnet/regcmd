liveplot = false
enableCuda = false
ClassNLL = true

dofile "readImage.lua"

model = nn.Sequential()
model:add(nn.SpatialConvolution(1, 6, 5, 5))
model:add(nn.Tanh())
model:add(nn.SpatialAveragePooling(2,2,2,2))
model:add(nn.Tanh())
model:add(nn.SpatialConvolution(6, 16, 5, 5))
model:add(nn.Tanh())
model:add(nn.SpatialAveragePooling(2,2,2,2))
model:add(nn.Tanh())
model:add(nn.SpatialConvolution(16, 120, 5, 5))
model:add(nn.Tanh())
model:add(nn.Reshape(120))
model:add(nn.Linear(120, 2))

dofile "writeModel.lua"
biases = model:get(12).bias
weights = model:get(12).weight
train_data[1].data
model:forward(train_data[1].data)[1]
model:forward(torch.Tensor(1,32,32):fill(-1))
model:forward(test_data[1].data)
model:forward(test_data[2].data)
model:forward(test_data[3].data)
model:forward(test_data[4].data)

a = torch.conv2(torch.Tensor(32,32):fill(1),weights[1][1])
a = torch.conv2(train_data[1].data[1],weights[1][1])


shuffle = torch.randperm(trsize)
i=1
input = train_data[i].data
target = train_data[i].labels
output = model:forward(input)
err = criterion:forward(output, target)
target
output
err

#(model:get(1).weight)

exp(-1.3)+exp(-1.2)+exp(0.9)+exp(2.4)+exp(1.1)+exp(-0.1)+exp(-0.9)+exp(-0.9)+exp(0.9)+exp(-1.9)
-0.280555 0.15342

log(exp(0.15342)/(exp(-0.280555)+exp(0.15342)))/log(e)

require 'nn'
require 'cunn'
require 'torch'
require 'cutorch'

model = torch.load("results/model.net")
